@using ToDoList.Frontend.Views
@using ToDoList.Frontend.Clients;
@inject IToDoItemsClient ToDoItemsClient
@rendermode InteractiveServer

<h1>Dashboard</h1>
<table>
    <thead>
        <tr>
            <td><button @onclick="OrderById">order by id</button></td>
            <td><button @onclick="OrderByName">order by name</button></td>
        </tr>
    </thead>
    <body>
        @if  (toDoItems is not null)
        {
            @foreach(var toDoItem in toDoItems)
    {
        <tr>
            <td>@toDoItem.ToDoItemId</td>
            <td>@toDoItem.Name</td>
            <td>@toDoItem.Description</td>
            <td>@toDoItem.IsCompleted</td>

        </tr>
    }
        }

    </body>
</table>

@code
{
    protected override async Task OnInitializedAsync()
    {
        toDoItems = await ToDoItemsClient.ReadItemsAsync();
    }
    private List<ToDoItemView>? toDoItems;

    public void OrderByName()
    {
        toDoItems = toDoItems?.OrderBy(ukol => ukol.Name).ToList();
    }

    public void OrderById()
    {
        toDoItems = toDoItems?.OrderBy(ukol => ukol.ToDoItemId).ToList();
    }

}
